{"name":"luafft","tagline":"Lua package that includes functions for Fast Fourier Transformations.","body":"# Introduction\r\n\r\n**luafft** is an easy to use Fast Fourier Transformation package in pure Lua. It is based on the FFT implementation of KissFFT by Mark Borgerding which is both easy to use and extremly fast. It also uses the complex number module from the Numeric Lua package.\r\n\r\n# Installation\r\n\r\nLuaFFT is part of the LuaRocks repository where it can be easily installed by using:\r\n\r\n`luarocks install luafft`\r\n\r\nor simply use Git:\r\n\r\n`git clone git://github.com/vection/LuaFFT.git`\r\n\r\n# Usage\r\n\r\nLuaFFT is very easy to use. The following lines of code show, how to carry out a simple Fast Fourier Transformation. Keep in mind, that values have to be given as complex values, otherwise luafft returns an error.\r\n\r\n```lua\r\nluafft = require \"luafft\"\r\n\r\nlocal list1 = {}\r\nlocal size = 2048\r\n\r\n--Populates a list with random real numbers in complex format\r\nfunction populate(list)\r\n  for i=1,size do\r\n      list[i] = complex.new(math.random(), 0)\r\n  end\r\nend\r\n\r\n--displays a comparison of two lists with complex numbers\r\nfunction compare(one, two)\r\n  for i=1,#one do print(string.format(\"1: %s\\t2: %s\\n\",\r\n tostring(one[i]),tostring(two[i]))) end\r\nend\r\n\r\n--devide a list with a certain constant factor\r\nfunction devide(list, factor)\r\n  for i,v in ipairs(list) do list[i] = list[i] / factor end\r\nend\r\n\r\n--create a list with random real values\r\npopulate(list1)\r\n\r\n--carry out fast fourier transformation and store result in \"ret\"\r\nret = fft(list1, false)\r\n\r\n--now carry out inverse fast fourier transformation and store result in \"ret2\"\r\nret2 = fft(ret, true)\r\n\r\n--After retransformation, we need to devide by the data size\r\ndevide(ret2, size)\r\n\r\n--displays a comparison of the input and the output, the real part should be equal\r\n--the imaginary part is non zero (but fairly close) due to several calculations\r\n--that have been carried out in the FFT\r\ncompare(list2,ret)\r\n```\r\n\r\n# Licence and Version\r\n**luafft** is licensed under the same license as Lua -- the MIT license -- and so can be freely used for academic and commercial purposes.\r\nThis is version 1.1-1.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}